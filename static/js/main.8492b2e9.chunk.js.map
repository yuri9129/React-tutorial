{"version":3,"sources":["index.js"],"names":["Square","props","className","winSquare","onClick","value","Board","i","this","squares","winSquares","includes","col","row","push","renderSquare","board","renderBoardRow","React","Component","Game","state","history","Array","fill","cell","stepNumber","xIsNext","sortDesc","slice","length","calculateWinner","winner","setState","concat","step","status","current","moves","map","move","Math","ceil","desc","jumpTo","reverse","handleClick","changeSort","lines","result","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8492b2e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/**\r\n * マス目\r\n */\r\nfunction Square(props){\r\n  let className = \"square\";\r\n  if(props.winSquare){\r\n    className += \" win\";\r\n  }\r\n  return(\r\n    <button className={className} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * ボード全体：マス目\r\n */\r\nclass Board extends React.Component {\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        winSquare={this.props.winSquares.includes(i)}\r\n        onClick={() => this.props.onClick(i)}\r\n        key={i}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderBoardRow(col, row){\r\n    let squares = [];\r\n    for(let i = 0; i < col; i++){\r\n      squares.push(this.renderSquare(row * col + i));\r\n    }\r\n    return (\r\n      <div className=\"board-row\" key={row}>\r\n        {squares}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let board = [];\r\n    // 3*3の盤面を生成\r\n    const row = 3;\r\n    const col = 3;\r\n\r\n    for(let i = 0; i < row; i++){\r\n      board.push(this.renderBoardRow(col, i));\r\n    }\r\n    return (\r\n      <div>\r\n        {board}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * ゲーム管理\r\n */\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n        cell: null,\r\n      }],\r\n      stepNumber : 0,\r\n      xIsNext: true,\r\n      sortDesc: false,\r\n    }\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if(calculateWinner(squares).winner || squares[i]){\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        cell: i,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step){\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    })\r\n  }\r\n\r\n  changeSort(){\r\n    this.setState({\r\n      sortDesc: !this.state.sortDesc\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const {winner:winner, squares:winSquares} = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const col = step.cell % 3 + 1;\r\n      const row = Math.ceil((step.cell + 1) / 3);\r\n      const desc = move ?\r\n        'Go to move #' + move + ' ( ' + col + ',' + row + ')':\r\n        'Go to game start';\r\n      let className = \"\";\r\n      if(this.state.stepNumber === move){\r\n        className = \"selected\";\r\n      }\r\n      return (\r\n        <li key={move}>\r\n          <button className={className} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      )\r\n    })\r\n    if(this.state.sortDesc){\r\n      moves.reverse();\r\n    }\r\n\r\n    let status;\r\n    if(winner){\r\n      status = 'Winner: ' + winner;\r\n    }else if(this.state.history.length === 9 + 1){\r\n      status = 'Draw! Play again?';\r\n    }else{\r\n      status = 'Next Player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            winSquares={winSquares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <div><button onClick={() => this.changeSort()}>Sort</button></div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  const result = {\r\n    winner: null,\r\n    squares: [],\r\n  }\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      result.winner = squares[a];\r\n      result.squares = lines[i];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n"],"sourceRoot":""}